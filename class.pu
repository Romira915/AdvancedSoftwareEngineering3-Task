@startuml 図書貸出システム_クラス図

title 図書貸出システム クラス図
skinparam dpi 150
!include style.pu

package view {
    class UserRegisterView {
        +moveMembersshipPage()
    }

    class LoginView {
        +moveMembersshipPage()
        +showLoginErrorMessage()
    }

    class BookLendView {
        +showLendErrorMessage()
        +moveLendCompletedPage()
    }

    class BookReturnView {
        +showLendedList(lendedList)
        +moveReturnCompletedPage()
    }

    class RoomReservationView {
        +showRoomList(roomList)
        +moveReservedPage()
        +showReservedMessage()
    }

    class AdminView {
        +showUserList(userList)
        +movePermissionDeniedErrorPage()
    }
}

package controller {
    class UserRegisterController {
        -userModel: UserModel
        -userRegisterView: UserRegisterView
        +onClickUserRegister(name, password)
    }

    class LoginController {
        -loginView: LoginView
        -userModel: UserModel
        +onClickLogin(id, password)
    }

    class BookLendController {
        -bookModel: BookModel
        -bookLendView: BookLendView
        +onClickLend()
    }

    class BookReturnController {
        -bookModel : BookModel
        -bookLendView: BookLendView
        +onClickReturnBook()
        +selectReturnBook()
    }

    class RoomReservationController {
        -roomReservationModel: RoomReservationModel
        -roomReservationView: RoomReservationView
        +onClickRoomReservation()
        +selectRoom()
    }

    class AdminController {
        -userModel: UserModel
        -adminView: AdminView
        +onClickUserList()
        +onClickOnLoanUserList()
    }

    class BookReservationController {
        -bookModel : BookModel
        -bookReservationView : BookReservationView
        +onClickBookReservation()
    }
}

package model {
    class UserModel {
        -userList: User[]
        -appendUser(user)
        -getUser(id): User
        +userRegister(name, password): User
        +login(id, password): Result<User, _>
        +getMe(): User
        +getUserList()
        +getOnLoanUserList()
    }

    class BookModel {
        -bookList: Book[]
        +lend(userId)
        +getBook(bookId)
        +getLendedList(userId)
        +returnBook(bookId)
        +reservationBook(userId, bookId)
    }

    class RoomReservationModel {
        -roomList: Room[]
        -getRoom(roomId): Room
        +getVacantRoomList()
        +roomReservation(student: Student, roomId)
    }
}



package entity {
    entity BarcodeReader {
        +read(): UUID
    }

    entity Book {
        -id: UUID
        -rentingUser: Option<UUID>
        -reservationQueue: Queue<UUID>
        +lock()
        +unlock()
        +canLend()
        +setLendByUser(userId)
        +returnBook()
        +reservation(userId)
        +getNumReservation()
    }

    entity Room {
        -id: UUID
        -reservingUser: Option<UUID>
        +lock()
        +unlock()
        +getStatus() : RoomStatus
        +reserve(userId)
    }

    enum RoomStatus {
        Vacant
        Reserved(userId: UUID)
    }

    entity User {
        -name: String
        -id: UUID
        -passHash: String
        -LendedBook: Book[]
        +newUser(name, password)
        +LoginValidation(password): Bool
        +getName()
        +getId()
        +getLendedList()
    }

    entity StudentUser
    User <|-- StudentUser

    entity Administrator
    User <|-- Administrator #line:red;line.bold;text:red
}

package service {
    class EncryptionService {
        +hash(str): String
    }

    class UUID {
        +newUUID() : UUID
    }
}

package std {
    enum Result<T, E> {
        Ok(T)
        Err(E)
    }

    enum Option<T> {
        None
        Some(T)
    }
}

entity Client {
        -me : Option<User>
        +setLoginUser(user)
        +getMe(): User
}

UserModel "1" *-- "1..*" User
BookModel "1" *-- "1..*" Book
RoomReservationModel "1" *-- "1..*" Room

UserRegisterController "*" x-- "1" UserModel
LoginController "*" x-- "1" UserModel
BookLendController "*" x-- "1" BookModel
BookReturnController "*" x-- "1" BookModel
RoomReservationController "*" x-- "1" RoomReservationModel
AdminController "*" x-- "1" UserModel

UserRegisterView --x UserRegisterController
LoginView --x LoginController
BookLendView --x BookLendController
BookReturnView --x BookReturnController
RoomReservationView --x RoomReservationController
AdminView --x AdminController

Client --x UserRegisterController
Client --x LoginController
Client --x BookLendController
Client --x BookReturnController
Client --x RoomReservationController
Client --x AdminController
Client --x BookReservationController

User x- EncryptionService
User x- UUID
Book x- UUID
Room x- UUID

Room -- RoomStatus
UserModel -- Result
Client -- Option
Book -- Option
Room -- Option
BookModel -- BarcodeReader

@enduml